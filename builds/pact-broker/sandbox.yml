name: Install Pact Broker (sandbox)
trigger: none

variables:
  serviceConnection: azurerm-sandbox
  acrServiceConnection: azurerm-nonprod
  acrName: hmcts
  kubectlConnectionType: "Azure Resource Manager"
  aksResourceGroup: "cnp-aks-mgmt-rg"
  clusterName: "cnp-aks-mgmt-sandbox-cluster"
  keyvaultName: "infra-vault-sandbox"
  ingressHost: sandbox-pact-broker.platform.hmcts.net
  resourceGroup: "pact-broker-mgmt-sandbox"
  helmVersion: '2.12.0'
  tenantId: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
  subscriptionId: "bf308a5c-0624-4334-8ff8-8dca9fd43783"
  postgresqlHost: "pact-broker-mgmt-sandbox.postgres.database.azure.com"
  postgresqlDatabase: "pact"
  postgresqlParametersFile: 'arm/parameters/postgresql/sandbox.json'
  installPostgresql: "false"

jobs:
- job: Keyvault
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - template: ../../steps/keyvault-ci.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      keyvaultName: $(keyvaultName)

- job: DeployPactBroker
  dependsOn: Keyvault
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    pactDbUser: $[dependencies.Keyvault.outputs['exportKeyvault.pactDbUser']]
    pactDbPassword: $[dependencies.Keyvault.outputs['exportKeyvault.pactDbPassword']]
  steps:
  - template: ../../tasks/deploy-postgresql-arm.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      resourceGroup: $(resourceGroup)
      postgresqlParametersFile: $(postgresqlParametersFile)
      pactDbUser: $(pactDbUser)
      pactDbPassword: $(pactDbPassword)
      enabled: false
  - template: ../../steps/install-pact-broker.yml
    parameters:
      serviceConnection: $(serviceConnection)
      acrServiceConnection: $(acrServiceConnection)
      acrName: $(acrName)
      kubectlConnectionType: $(kubectlConnectionType)
      aksResourceGroup: $(aksResourceGroup)
      clusterName: $(clusterName)
      keyvaultName: $(keyvaultName)
      ingressHost: $(ingressHost)
      resourceGroup: $(resourceGroup)
      helmVersion: $(helmVersion)
      postgresqlParametersFile: $(postgresqlParametersFile)
      tenantId: $(tenantId)
      subscriptionId: $(subscriptionId)
      postgresqlHost: $(postgresqlHost)
      postgresqlDatabase: $(postgresqlDatabase)
